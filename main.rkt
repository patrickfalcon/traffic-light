#lang racket

(require "AsipMain.rkt")


(define inputPin 7) (define curInput LOW) (define oldInput LOW)

(define changing 0)

;; asip minimal program to blink pin 13 every second

(define redI '(5 13 9))
(define greenI '(2 10 6))
(define amberI '(3 11))

(define turnOn(λ ()
                (digital-write 5 HIGH)
                (digital-write 3 HIGH)
                (digital-write 2 HIGH)

                (digital-write 13 HIGH)
                (digital-write 11 HIGH)
                (digital-write 10 HIGH)

                (digital-write 9 HIGH)
                (digital-write 6 HIGH)
                )
  )

(define buttonPress (λ ()
                      (cond
                        ((equal? changing 0)
                         (set! changing 1)
                         (c 3 HIGH)
                         (c 11 HIGH)
                         (c 13 HIGH)
                         (c 9 HIGH)
                         (sleep 1.5)
                         (c 3 LOW)
                         (c 11 LOW)
                         (c 13 LOW)
                         (c 9 LOW)
                         (set! changing 0)
                         (light)
                      ))
                      )
  )

(define turnOff(λ ()
                 (digital-write 5 LOW)
                 (digital-write 3 LOW)
                 (digital-write 2 LOW)

                 (digital-write 13 LOW)
                 (digital-write 11 LOW)
                 (digital-write 10 LOW)

                 (digital-write 9 LOW)
                 (digital-write 6 LOW)
                 )
  )

(define c (λ (v1 v2)
            (digital-write v1 v2)
            )
  )

(define log (λ (v1)
              (display (string-append v1))
              )
  )


(define light (λ ()
                (cond
                  ((equal? changing 0)
                   
                   (c 5 HIGH)
                   (c 10 HIGH)
                   (c 6 HIGH)
                   (sleep 2.5)
                   (turnOff)
                   (c 5 HIGH)
                   (c 3 HIGH)
                   (c 11 HIGH)
                   (c 9 HIGH)
                   (print "BUTTON PRESSED")
                   (buttonPress)
                   (sleep 1.5)
                   (turnOff)
                   (c 2 HIGH)
                   (c 13 HIGH)
                   (c 9 HIGH)
                   (sleep 2.5)
                   (turnOff)
                   (c 3 HIGH)
                   (c 13 HIGH)
                   (c 11 HIGH)
                   (c 9 HIGH)
                   (sleep 1.5)
                   (turnOff)
                   (light)
                   )
                  )
                )
  )
                

  (define preliminaryOperationsForMyCode 
    (λ ()
      (open-asip)  
      (set-pin-mode! 13 OUTPUT_MODE)
      (set-pin-mode! 11 OUTPUT_MODE)
      (set-pin-mode! 10 OUTPUT_MODE)
      (set-pin-mode! 9 OUTPUT_MODE)
      (set-pin-mode! 6 OUTPUT_MODE)
      (set-pin-mode! 5 OUTPUT_MODE)
      (set-pin-mode! 3 OUTPUT_MODE)
      (set-pin-mode! 2 OUTPUT_MODE)
      (set-pin-mode inputPin INPUT_PULLUP_MODE)
      ) ;; end of lambda
    ) ;; end of setup


  (define myFantasticApplication 
    (λ ()
      (set! curInput (digital-read inputPin))
      (cond ( (not (equal? curInput oldInput))
              (cond ( (equal? (digital-read inputPin) LOW)
                      (displayln "Low"))
                    (else
                     (displayln "High"))
                    ))
            )
      (set! oldInput curInput)
      (sleep 0.01)

      ;;(digital-write 13 HIGH)
      ;;(digital-write 2 HIGH)
      ;;(digital-write 9 HIGH)
      ;;(sleep 5)
      ;;(digital-write 13 LOW)
      ;;(digital-write 2 LOW)
      ;;(digital-write 9 LOW)
      ;;(sleep 0.2)
      ;;(digital-write 13 HIGH)
      ;;(digital-write 11 HIGH)
      ;;(digital-write 3 HIGH)
      ;; (digital-write 9 HIGH)
      ;; (sleep 5)
      ;;(digital-write 13 LOW)
      ;; (digital-write 11 LOW)
      ;;(digital-write 3 LOW)
      ;; (digital-write 9 LOW)
      ;; (sleep 0.2)
      ;;  (digital-write 10 HIGH)
      ;;  (digital-write 5 HIGH)
      ;;  (digital-write 6 HIGH)
      ;;  (sleep 5)
      ;;  (digital-write 10 LOW)
      ;;  (digital-write 5 LOW)
      ;; (digital-write 6 LOW)
      ;;  (sleep 0.2)
      ;;  (digital-write 5 HIGH)
      ;;  (digital-write 3 HIGH)
      ;;  (digital-write 11 HIGH)
      ;;  (digital-write 9 HIGH)
      ;;  (sleep 5)
      ;;  (digital-write 5 LOW)
      ;;  (digital-write 3 LOW)
      ;;  (digital-write 11 LOW)
      ;;  (digital-write 9 LOW)
      ;;  (sleep 0.2)
      (turnOn)
      (sleep 0.5)
      (turnOff)
      (light)
      
      )
    )

  (preliminaryOperationsForMyCode)
  (myFantasticApplication)

  